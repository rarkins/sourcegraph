.theme-redesign.theme-dark,
.theme-redesign.theme-light {
    // Ensure Bootstrap does not create any variants, we will use our own theme-colors
    $theme-colors: map-remove($theme-colors, 'primary', 'secondary', 'success', 'info', 'danger', 'warning', 'merged');
    @import 'bootstrap/scss/buttons';
    @import 'bootstrap/scss/button-group';
}

@mixin redesign-button-variant($background-color, $disabled-color, $hover-color, $focus-outline-color) {
    color: var(--light-text);
    border-color: transparent;
    background-color: $background-color;

    &:hover {
        color: var(--light-text);
        background-color: $hover-color;
    }

    &:focus,
    &.focus,
    &:active,
    &.active {
        background-color: $background-color;
        border-color: var(--body-bg);
        box-shadow: 0 0 0 2px $focus-outline-color;
    }

    &.disabled,
    &:disabled {
        opacity: 1;
        background-color: $disabled-color;
        border-color: $disabled-color;
    }
}

@mixin redesign-button-outline-variant($border-color, $hover-color, $focus-outline-color) {
    color: var(--body-color);
    border-color: $border-color;
    background-color: transparent;

    &:hover {
        background-color: var(--body-bg);
        color: $hover-color;
        border-color: $hover-color;
    }

    &.focus,
    &:focus,
    &:active,
    &.active {
        box-shadow: 0 0 0 2px $focus-outline-color;
    }

    &.disabled,
    &:disabled {
        color: var(--text-muted);
        background-color: var(--color-bg-1);
    }
}

.theme-light.theme-redesign {
    @each $color, $variants in $theme-colors-redesign-light {
        .btn-#{$color} {
            @include redesign-button-variant(
                $background-color: map-get($variants, 1),
                $disabled-color: map-get($variants, 2),
                $hover-color: map-get($variants, 3),
                $focus-outline-color: map-get($variants, 2)
            );
        }

        .btn-outline-#{$color} {
            @include redesign-button-outline-variant(
                $border-color: map-get($variants, 1),
                $hover-color: map-get($variants, 3),
                $focus-outline-color: map-get($variants, 2)
            );
        }
    }
}

.theme-dark.theme-redesign {
    @each $color, $variants in $theme-colors-redesign-dark {
        .btn-#{$color} {
            @include redesign-button-variant(
                $background-color: map-get($variants, 1),
                $disabled-color: map-get($variants, 2),
                $hover-color: map-get($variants, 3),
                $focus-outline-color: map-get($variants, 3)
            );
        }

        .btn-outline-#{$color} {
            @include redesign-button-outline-variant(
                $border-color: map-get($variants, 1),
                $hover-color: map-get($variants, 1),
                $focus-outline-color: map-get($variants, 3)
            );
        }
    }
}

// Overides
.theme-light.theme-redesign,
.theme-dark.theme-redesign {
    // Update text colors to improve contrast
    .btn-secondary,
    .btn-outline-secondary {
        color: var(--body-color);

        &:focus,
        &.focus,
        &:active,
        &.active {
            color: var(--body-color);
            // Use blue focus outline to improve contrast
            box-shadow: 0 0 0 2px var(--primary-2);
        }

        &:hover {
            color: var(--body-color);
        }

        &:disabled,
        &.disabled {
            color: var(--text-muted);
        }
    }
    .btn-warning,
    .btn-info {
        color: var(--dark-text);

        &:hover,
        &:focus,
        &.focus,
        &:active,
        &.active {
            color: var(--dark-text);
        }

        &:disabled,
        &.disabled {
            color: var(--text-muted);
        }
    }
}
