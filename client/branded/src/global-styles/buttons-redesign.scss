// @mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {

@mixin redesign-button-variant($base-color, $lighter-color-variant, $darker-color-variant) {
    @include button-variant(
        $background: $base-color,
        $border: $base-color,
        $hover-background: $darker-color-variant,
        $hover-border: transparent,
        $active-background: $base-color,
        $active-border: transparent
    );

    &.disabled,
    &:disabled {
        background-color: $lighter-color-variant;
        border-color: $lighter-color-variant;
        opacity: 1;
    }

    &.focus,
    &:focus {
        box-shadow: 0 0 0 2px $lighter-color-variant;
    }

    color: #{var(--reversed-text)};
}

@mixin redesign-button-outline-variant($base-color, $lighter-color-variant) {
    @include button-outline-variant(
        $color: #{var(--body-color)},
        $color-hover: $base-color,
        $active-background: transparent,
        $active-border: $lighter-color-variant
    );

    @include hover() {
        background-color: #{var(--color-bg-1)};
        border-color: $base-color;
    }

    &.disabled,
    &:disabled {
        color: #{var(--text-muted)};
    }

    &.focus,
    &:focus {
        box-shadow: 0 0 0 2px $lighter-color-variant;
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
        color: $base-color;
    }

    background-color: #{var(--body-bg)};
    border-color: $base-color;
}

.theme-light.theme-redesign,
.theme-light .theme-redesign {
    @each $color, $variants in $theme-colors-redesign-light-2 {
        .btn-#{$color} {
            @include redesign-button-variant(
                $base-color: map-get($variants, 1),
                $lighter-color-variant: map-get($variants, 2),
                $darker-color-variant: map-get($variants, 3)
            );
        }

        .btn-outline-#{$color} {
            @include redesign-button-outline-variant(
                $base-color: map-get($variants, 1),
                $lighter-color-variant: map-get($variants, 2)
            );
        }
    }

    // Light overrides
    .btn-secondary,
    .btn-warning,
    .btn-info {
        color: var(--body-color);
        &:focus,
        &.focus,
        &:hover,
        &.hover {
            color: var(--body-color);
        }
    }
}

.theme-dark.theme-redesign,
.theme-dark .theme-redesign {
    @each $color, $variants in $theme-colors-redesign-dark-2 {
        .btn-#{$color} {
            @include redesign-button-variant(
                $base-color: map-get($variants, 1),
                $lighter-color-variant: map-get($variants, 2),
                $darker-color-variant: map-get($variants, 3)
            );

            // Invert to use a darker focus border in dark mode
            &.focus,
            &:focus {
                box-shadow: 0 0 0 2px map-get($variants, 3);
            }
        }

        .btn-outline-#{$color} {
            @include redesign-button-outline-variant(
                $base-color: map-get($variants, 1),
                $lighter-color-variant: map-get($variants, 2)
            );

            // Invert to use a darker focus border in dark mode
            &.focus,
            &:focus {
                box-shadow: 0 0 0 2px map-get($variants, 3);
            }
        }
    }

    // Dark overrides
    .btn-info {
        color: var(--secondary);
        &:focus,
        &.focus,
        &:hover,
        &.hover {
            color: var(--secondary);
        }
    }
}

.theme-light.theme-redesign,
.theme-light .theme-redesign,
.theme-dark.theme-redesign,
.theme-dark .theme-redesign {
    // Shared overrides
    .btn-secondary,
    .btn-outline-secondary {
        &:focus,
        &.focus {
            box-shadow: 0 0 0 2px var(--primary-2);
        }
    }

    .btn-outline-secondary {
        color: var(--body-color);
        border-color: var(--border-color-2);
        @include hover() {
            color: #{var(--body-color)};
            background-color: #{var(--color-bg-1)};
        }

        &.disabled,
        &:disabled,
        // :not required for specificity
        &:not(:disabled):not(.disabled):active,
        &:not(:disabled):not(.disabled).active {
            color: #{var(--body-color)};
        }
    }
}
